@page
@model WebAppToys.Pages.Admin.Listings.IndexModel
@using Infrastructure.Utility
@using System.Security.Claims;

@{
    ViewData["Title"] = "Listings";
}

<div class="container p-3 col-8">
    <div class="card bg-transparent shadow border-0">
        <div class="card-body semi-transparent">
            <div class="row">
                <div class="col-6">
                    <h2 class="text-primary">Toy List</h2>
                </div>

            </div>
            <div class="row mt-3">
                <div class="col-12 d-flex justify-content-between">
                    <a asp-page="./Index" asp-route-ShowMyListings="@(Model.ShowMyListings ? "false" : "true")" class="btn btn-outline-primary">
                        @(Model.ShowMyListings ? "Show All Listings" : "Show My Listings")
                    </a>
                    @if (User.IsInRole(SD.UserRole))
                    {
                        <a asp-page="Upsert" asp-route-id="0" class="btn btn-primary text-end">
                            <i class="fas fa-plus-circle"></i>&nbsp;Create New
                        </a>
                    }
                    else
                    {
                        <a asp-area="Identity" asp-page="/Account/Register" class="btn btn-primary text-end">
                            <i class="fas fa-plus-circle"></i>&nbsp;Create New
                        </a>
                    }
                </div>
            </div>
            <br>
        </div>
    </div>
</div>
<div class="container p-3 col-8">
    <div class="card bg-transparent shadow border-0 mb-5">
        <div class="card-body semi-transparent">
            <div class="table-responsive">
                <div class="container p-3">
                    <div class="card bg-transparent border-0">

                        <div class="d-flex flex-wrap justify-content-between">
                            @foreach (var toy in Model.ListingObj)
                            {
                                var timerId = "timer-" + toy.Id;
                                <div class="m-2 d-flex flex-column" style="width: 225px;">
                                    <a asp-page="./Details" asp-route-id="@toy.Id" class="text-decoration-none shadow">
                                        <div class="card w-100 h-100 p-2">
                                            <img src="@toy.Image" class="card-img-top" alt="@toy.Name" />
                                           <!-- <img src="~/dinosaur-lego.jpeg" class="card-img-top" alt="@toy.Name" />-->
                                            <div class="card-body">
                                                <p class="card-title text-dark small">@toy.Name</p>
                                                <p class="card-text small" id="@timerId">Loading...</p>
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            }
                        </div>


                    </div>
                </div>








            </div>
        </div>
    </div>
</div>











@section Scripts {
    <script>
        function createCountdownTimer(elementId, expirationDate) {
            var countDownDate = new Date(expirationDate).getTime();
            var timerElement = document.getElementById(elementId);

            function updateTimer() {
                var now = new Date().getTime();
                var distance = countDownDate - now;

                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                timerElement.innerHTML = "Exp: " + days + "d " + hours + "h " + minutes + "m " + seconds + "s ";

            }

            // run once right when the page loads and then every minute from there
            updateTimer();
            var x = setInterval(updateTimer, 1000);
        }


        // Initialize the timers for each listing
        @foreach (var toy in Model.ListingObj)
        {
            var timerId = "timer-" + toy.Id;
            var formattedDate = Json.Serialize(toy.ExpirationDate);
            <text>
                createCountdownTimer("@timerId", @formattedDate);
            </text>
        }
    </script>
}


