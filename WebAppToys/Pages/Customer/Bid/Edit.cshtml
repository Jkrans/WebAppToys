@page
@model _WebAppToys.Pages.Customer.EditModel

@{
    ViewData["Title"] = "Edit";
}



<div class="container mt-5">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card bg-transparent border-0">
                <div class="card-body semi-transparent">
                    <h1 class="text-center">Update Bid</h1>
                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="BidsObj.Id" />
                        <input type="hidden" asp-for="BidsObj.User_Id" />
                        <input type="hidden" asp-for="BidsObj.Listing_Id" />
                        <input type="hidden" asp-for="BidsObj.Status" />

                        <div class="form-group">
                            <label asp-for="BidsObj.Price" class="control-label"></label>
                            <input asp-for="BidsObj.Price" class="form-control" />
                            <span asp-validation-for="BidsObj.Price" class="text-danger"></span>
                        </div>
                        <div class="form-group mt-3">
                            <label asp-for="BidsObj.Trade_Id" class="control-label"></label>
                            <select asp-for="BidsObj.Trade_Id" asp-items="Model.UserListings" id="listingSelect" class="form-control custom-select">
                                <option value="">-- Select a listing --</option>

                            </select>
                            <span asp-validation-for="BidsObj.Trade_Id" class="text-danger"></span>
                        </div>

                        <div class="form-group d-flex justify-content-end">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            <a asp-page="/Admin/Listings/Index" class="btn btn-secondary ml-2">Back to List</a>
                        </div>
                    </form>
                    <p class="p-0 m-0">Description: </p>
                    <p id="listingName"></p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        const listingSelect = document.getElementById('listingSelect');
        const listingName = document.getElementById('listingName');

        // Get the listing details
        async function fetchListingDetails(listingId) {
            const response = await fetch(`/api/Listing/${listingId}`);
            if (response.ok) {
                const listing = await response.json();
                return listing;
            } else {
                console.error('Error fetching listing details:', response);
                return null;
            }
        }

        // Update the description
        async function updateListingName() {
            const listingId = listingSelect.value;
            const listing = await fetchListingDetails(listingId);
            if (listing) {
                listingName.textContent = listing.description;
            } else {
                listingName.textContent = '';
            }
        }

        // Handle the change event listingSelect
        listingSelect.addEventListener('change', updateListingName);

        // Update the listingName when the page loads
        updateListingName();
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
